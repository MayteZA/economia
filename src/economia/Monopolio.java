/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package economia;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author Zayas
 */
public class Monopolio extends javax.swing.JFrame {

    /**
     * Creates new form Monopolio
     */
    public Monopolio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ValorUnoDx = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ValorDosDx = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ValorUnoCT = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        ValorDosCT = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        ValorTresCT = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Calcular = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Resultados = new javax.swing.JTextArea();
        Regresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 255));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Microeconomía: Monopolio");

        jLabel2.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("A continuación, ingrese los valores de las funciones a evaluar:");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Dx =");

        ValorUnoDx.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("-");

        ValorDosDx.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("px");

        jLabel6.setFont(new java.awt.Font("Arial", 2, 10)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Ej. 600 - 2 px");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("CT =");

        ValorUnoCT.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("+");

        ValorDosCT.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("qx  +");

        ValorTresCT.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("q^2x");

        jLabel11.setFont(new java.awt.Font("Arial", 2, 10)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Ej. 450 + 3 qx + 2 q^2x");

        Calcular.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Calcular.setText("Calcular");
        Calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcularActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton2.setText("Mostrar Gráfica");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        Resultados.setColumns(20);
        Resultados.setRows(5);
        jScrollPane1.setViewportView(Resultados);

        Regresar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Regresar.setText("Regresar a Menú");
        Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Regresar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(ValorUnoDx, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ValorDosDx, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel5))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Calcular)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(ValorUnoCT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(ValorDosCT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ValorTresCT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel10)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(ValorDosDx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(ValorUnoCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(ValorDosCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)
                                    .addComponent(ValorTresCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)))
                            .addComponent(ValorUnoDx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addGap(31, 31, 31)
                        .addComponent(Calcular)
                        .addGap(0, 102, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(Regresar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalcularActionPerformed
        contTextArea();
    }//GEN-LAST:event_CalcularActionPerformed

    private void RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresarActionPerformed
        MenuPrincipal menu=new MenuPrincipal();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_RegresarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ArrayList<Double> CMg= this.graficaCMg();
        ArrayList<Double> CP= this.graficaCP();
        ArrayList<Double> DX= this.graficaDx();
        ArrayList<Double> IMG= this.graficaIMg();
        XYSeriesCollection ser = new XYSeriesCollection();
        XYSeries Datoscmg = new XYSeries("CMG");
        XYSeries Datoscp = new XYSeries("CP");
        XYSeries Datosdx = new XYSeries("DX");
        XYSeries Datosimg = new XYSeries("IMG");
        
        for (int i = 1; i < CMg.size(); i++) {
            Datoscmg.add((i+1),CMg.get(i));
        }
        for (int i = 1; i < CP.size(); i++) {
            Datoscp.add((i+1),CP.get(i));
        }
        for (int i = 0; i < DX.size(); i++) {
            Datosdx.add((i),DX.get(i));
        }
        for (int i = 0; i < IMG.size(); i++) {
            Datosimg.add((i),IMG.get(i));
        }
        ser.addSeries(Datoscmg); 
        ser.addSeries(Datoscp);
        ser.addSeries(Datosdx);
        ser.addSeries(Datosimg);
        
        
        
        
        double unopx=(Double.parseDouble(ValorUnoDx.getText()))/(Double.parseDouble(ValorDosDx.getText()));
        double dospx=1/(Double.parseDouble(ValorDosDx.getText()));
        double numqx=unopx-Double.parseDouble(ValorDosCT.getText());
        double dosval=dospx*2;   
        double valdos=(Float.parseFloat(ValorTresCT.getText())*2);
        double denqx=valdos+dosval;
        double qx=numqx/denqx;
        double px=unopx-(dospx*qx);
        
        ValueMarker mqx = new ValueMarker(qx);
        mqx.setPaint(Color.BLACK);
        mqx.setAlpha(1);
        ValueMarker mpx = new ValueMarker(px);
        mpx.setPaint(Color.MAGENTA);
        mpx.setAlpha(1);
        
        JFreeChart Grafica = ChartFactory.createXYLineChart("Grafica","Qx", "Px", ser,
        PlotOrientation.VERTICAL, true, true, false);
        ChartPanel Panel = new ChartPanel(Grafica);
        Grafica.getXYPlot().addDomainMarker(mqx);
        Grafica.getXYPlot().addRangeMarker(mpx);
        JFrame Ventana = new JFrame("Grafica");
        Ventana.getContentPane().add(Panel);
        Ventana.pack();
        Ventana.setVisible(true);
        Ventana.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jButton2ActionPerformed
    
    public void contTextArea(){
        //Despejamos Px de Dx
        String msjone="Despejamos Px de Dx y obtenemos:\n";
        float unopx=(Float.parseFloat(ValorUnoDx.getText()))/(Float.parseFloat(ValorDosDx.getText()));
        float dospx=1/(Float.parseFloat(ValorDosDx.getText()));
        msjone+="Px = "+unopx+" - "+dospx+" qx \n";
        
        //Determinamos IT con base en Px
        msjone+="\nIT = "+unopx+" qx - "+dospx+" q^2x \n";
        
        //Derivamos IT para obtener IMg
        float dosval=dospx*2;        
        msjone+="\nIMg = "+unopx+" - "+dosval+" qx \n";
        
        //Derivamos CT para obtener CMg
        float valdos=(Float.parseFloat(ValorTresCT.getText())*2);
        msjone+="CMg = "+ValorDosCT.getText()+" + "+valdos+" qx \n";
        
        //Determinamos valor de qx
        float numqx=unopx-Float.parseFloat(ValorDosCT.getText());
        float denqx=valdos+dosval;
        float qx=numqx/denqx;
        msjone+="\nqx = "+String.format("%.2f",qx)+"\n";
        
        //PendCMg > PendIMg
        msjone+="\nPendCMg = "+valdos+"\n";
        msjone+="PendIMg = - "+dosval+"\n";
        msjone+=valdos+" > - "+dosval+"\n";
        
        //Determinamos valor de Px
        float px=unopx-(dospx*qx);
        msjone+="\nPx = "+String.format("%.2f",px)+"\n";
        
        //Determinamos Beneficio Máximo
        float it=px*qx;
        float pot=(float) Math.pow(qx,2);
        float ct=(Float.parseFloat(ValorUnoCT.getText())+(Float.parseFloat(ValorDosCT.getText())*qx)+(Float.parseFloat(ValorTresCT.getText())*pot));
        float benmax=it-ct;
        msjone+="\nIT = "+String.format("%.2f",it)+"\n";
        msjone+="CT = "+String.format("%.2f",ct)+"\n";
        msjone+="Beneficio Máximo = "+String.format("%.2f",benmax);
        Resultados.setText(msjone);
    }
    
    public ArrayList<Double> graficaCMg(){
        ArrayList<Double> xcmg=new ArrayList();
        for (int i = 1; i < 100; i+=1) {
            double ycmg=Double.parseDouble(ValorDosCT.getText())+(Double.parseDouble(ValorTresCT.getText())*i);
            xcmg.add(ycmg);
        }
        return xcmg;        
    }
    
    public ArrayList<Double> graficaCP(){
        ArrayList<Double> xcp=new ArrayList();
        for (int i = 1; i < 100; i+=1) {
            double pot=(Double) Math.pow(i,2);
            double ct=(Double.parseDouble(ValorUnoCT.getText())+(Float.parseFloat(ValorDosCT.getText())*i)+(Float.parseFloat(ValorTresCT.getText())*pot));        
            double ycp=ct/i;
            xcp.add(ycp);
           }
        return xcp;        
    }
    
    public ArrayList<Double> graficaDx(){
        ArrayList<Double> ydx=new ArrayList();
        
        for (int i = 0; i < 100; i+=1) {
            double unopx=(Double.parseDouble(ValorUnoDx.getText()))/(Double.parseDouble(ValorDosDx.getText()));
            double dospx=1/(Double.parseDouble(ValorDosDx.getText()));
            double xpx=unopx-(dospx*i);
            ydx.add(xpx);
           }
        return ydx;        
    }
    
    public ArrayList<Double> graficaIMg(){
        ArrayList<Double> yimg=new ArrayList();
        for (int i = 0; i < 100; i+=1) {
            double unopx=(Double.parseDouble(ValorUnoDx.getText()))/(Double.parseDouble(ValorDosDx.getText()));
            double dospx=1/(Double.parseDouble(ValorDosDx.getText()));
            double dosval=dospx*2;        
            double ximg=unopx-(dosval*i);
            System.out.println(ximg);
            yimg.add(ximg);
          }
        return yimg;        
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Monopolio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Monopolio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Monopolio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Monopolio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Monopolio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Calcular;
    private javax.swing.JButton Regresar;
    private javax.swing.JTextArea Resultados;
    private javax.swing.JTextField ValorDosCT;
    private javax.swing.JTextField ValorDosDx;
    private javax.swing.JTextField ValorTresCT;
    private javax.swing.JTextField ValorUnoCT;
    private javax.swing.JTextField ValorUnoDx;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
